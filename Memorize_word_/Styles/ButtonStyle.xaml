<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="1">
                        <Path Fill="#93BFCF " Data="{DynamicResource Minus}" Stretch="Uniform" Width="20"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#563C90"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="1" Background="{DynamicResource PrimaryBackground}">
                        <Path Fill="#93BFCF " Data="{DynamicResource maximize}" Stretch="Uniform" Width="20"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#563C90"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="1" Background="Transparent">
                        <Path Fill="#93BFCF " Data="{DynamicResource close}" Stretch="Uniform" Width="16"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#563C90"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton2" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="1" Background="{DynamicResource SecondaryBorderColor}">
                        <Path Fill="Red" Data="{DynamicResource close}" Stretch="Uniform" Width="16"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#563C90"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0 3 0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Indicator" Grid.Column="0" 
                                    Visibility="Collapsed"
                                    Height="45"
                                    CornerRadius="5"
                                    Background="{DynamicResource SecondaryBorderColor}"/>

                            <Path x:Name="icon" 
                                  Grid.Column="1"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" 
                                  Fill="{DynamicResource PrimaryTextColor}"
                                  Height="25" Width="25"
                                  Stretch="Uniform"/>

                            <TextBlock Grid.Column="2"
                                   x:Name="tb"
                                   FontSize="{TemplateBinding FontSize}"
                                   Text="{TemplateBinding Content}"
                                   FontFamily="Segoi UI"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource PrimaryTextColor}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SelectedBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SelectedBackground}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="MenuBtton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Margin" Value="0 3 0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="indicator" Grid.Column="0"
                                    Visibility="Collapsed"
                                    Height="20"
                                    Width="6"
                                    Background="{DynamicResource SecondaryBackground}"
                                    />
                            <Path x:Name="icon"
                                  Grid.Column="1"
                                  Data="{Binding tag,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Height="25" Width="25"
                                  Fill="{DynamicResource PrimaryTextColor}"
                                  Stretch="Uniform"/>
                            <TextBlock x:Name="tb"
                                       Grid.Column="2"
                                       FontSize="{TemplateBinding FontSize}"
                                       Text="{TemplateBinding Content}"
                                       FontFamily="Segoi Ui"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryTextColor}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SelectedBackground}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->

    <!--</Style>-->

    <!--<Style x:Name="SuccessButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{DynamicResource primaryButtonOk}">
                        <Label 
                        FontSize="24"
                        FontFamily="Jetbrains Mono"
                        FontWeight="SemiBold"
                        Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style x:Key="ButtonOK" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <!--<Setter Property="Margin" Value="5"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="1" Background="{DynamicResource PrimaryBackground}">
                        <Path Fill="#93BFCF " Data="{DynamicResource ImagePathh}" Stretch="Uniform" Width="16"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#563C90"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--<Style x:Key="Buttonsave" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Content" Value="Save"/>
        <Setter Property="Foreground" Value="Black"/>

        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
           
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border x:Name="B" CornerRadius="7" Background="{DynamicResource PrimaryBackground}">
                        <StackPanel Orientation="Horizontal">
                        <Path Fill="Black" Stretch="Uniform" Width="16"/>
                          <TextBlock VerticalAlignment="Center" Text="Save" Foreground="Black" FontSize="20"/>
                        </StackPanel>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#5e5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#e1e1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            
        </Setter>

    </Style>-->
    <Style x:Key="Buttonsave" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5" Background="#04BE7A">
                        <Label FontSize="22"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#049761"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#04BE7A"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#03774C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonXX" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5" Background="Red">
                        <Label FontSize="22"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="saved" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5" Background="White">
                        <Label FontSize="22"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="Black"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="wheat"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="wheat"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="wheat"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>